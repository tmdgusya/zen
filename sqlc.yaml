version: "2"
sql:
  - engine: "sqlite"
    queries: "./internal/repository/queries.sql"
    schema: "./internal/repository/schema.sql"
    gen:
      go:
        package: "repository"
        out: "./internal/repository/generated"
        sql_package: "database/sql"
        emit_json_tags: true
        emit_db_tags: true
        emit_prepared_queries: true
        emit_interface: true
        emit_exact_table_names: false
        emit_empty_slices: true
        emit_exported_queries: true
        emit_result_struct_pointers: false
        emit_params_struct_pointers: false
        emit_methods_with_db_argument: false
        emit_pointers_for_null_types: false
        emit_enum_valid_method: true
        emit_all_enum_values: true
        json_tags_case_style: "snake"
        # 테이블명을 단수형으로 변환 (jobs -> Job)
        inflection_exclude_table_names:
          - "jobs"
          - "job_executions" 
          - "scheduler_state"
          - "distributed_locks"
        overrides:
          # 컬럼 타입 오버라이드
          - column: "jobs.created_at"
            go_type: "time.Time"
          - column: "jobs.updated_at"
            go_type: "time.Time"
          - column: "job_executions.started_at"
            go_type: 
              type: "time.Time"
              pointer: true
          - column: "job_executions.finished_at"
            go_type:
              type: "time.Time" 
              pointer: true
          - column: "scheduler_state.last_run"
            go_type:
              type: "time.Time"
              pointer: true
          - column: "scheduler_state.next_run"
            go_type:
              type: "time.Time"
              pointer: true
          - column: "distributed_locks.acquired_at"
            go_type: "time.Time"
          - column: "distributed_locks.expires_at"
            go_type: "time.Time"
          - column: "distributed_locks.heartbeat_at"
            go_type: "time.Time"
          # Boolean 타입 명시적 설정
          - column: "jobs.is_active"
            go_type: "bool"version: "2"
sql:
  - engine: "postgres"
    queries: "internal/repository/queries.sql"
    schema: "internal/repository/schema.sql"
    gen:
      go:
        package: "github.com/tmdgusya/zen/db"
        out: "db"