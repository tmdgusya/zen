// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"context"
	"time"
)

type Querier interface {
	AcquireDistributedLock(ctx context.Context, arg AcquireDistributedLockParams) (DistributedLocks, error)
	CleanupExpiredLocks(ctx context.Context) error
	CleanupOldExecutions(ctx context.Context, startedAt *time.Time) error
	CreateJob(ctx context.Context, arg CreateJobParams) (Jobs, error)
	CreateJobExecution(ctx context.Context, arg CreateJobExecutionParams) (JobExecutions, error)
	DeleteJob(ctx context.Context, id int64) error
	DeleteSchedulerState(ctx context.Context, jobID int64) error
	GetDistributedLock(ctx context.Context, lockKey string) (DistributedLocks, error)
	GetJob(ctx context.Context, id int64) (Jobs, error)
	GetJobByName(ctx context.Context, name string) (Jobs, error)
	GetJobExecution(ctx context.Context, id int64) (JobExecutions, error)
	GetJobExecutionStats(ctx context.Context, jobID int64) (GetJobExecutionStatsRow, error)
	GetJobsReadyToRun(ctx context.Context, nextRun *time.Time) ([]GetJobsReadyToRunRow, error)
	GetRunningExecutions(ctx context.Context) ([]JobExecutions, error)
	GetSchedulerState(ctx context.Context, jobID int64) (SchedulerState, error)
	GetSystemStats(ctx context.Context, startedAt *time.Time) (GetSystemStatsRow, error)
	ListActiveJobs(ctx context.Context) ([]Jobs, error)
	ListJobExecutions(ctx context.Context, arg ListJobExecutionsParams) ([]JobExecutions, error)
	ListJobs(ctx context.Context) ([]Jobs, error)
	ListRecentJobExecutions(ctx context.Context, jobID int64) ([]JobExecutions, error)
	ListSchedulerStates(ctx context.Context) ([]ListSchedulerStatesRow, error)
	ReleaseDistributedLock(ctx context.Context, arg ReleaseDistributedLockParams) error
	RenewDistributedLock(ctx context.Context, arg RenewDistributedLockParams) error
	UpdateJob(ctx context.Context, arg UpdateJobParams) (Jobs, error)
	UpdateJobExecution(ctx context.Context, arg UpdateJobExecutionParams) (JobExecutions, error)
	UpdateJobStatus(ctx context.Context, arg UpdateJobStatusParams) error
	UpsertSchedulerState(ctx context.Context, arg UpsertSchedulerStateParams) error
}

var _ Querier = (*Queries)(nil)
